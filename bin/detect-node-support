#!/usr/bin/env node

'use strict';

const Minimist = require('minimist');
const Util = require('util');

const NodeSupport = require('..');

const internals = {};

internals.help = () => {

    return `
Usage: detect-node-support [--deps] [--dev] [--deep] [--json] <what>

  <what> can be an npm package name, or a Github URL, or a path 
  with a package.json.

Options:
  --deep    When used with --deps, include indirect dependencies
  --deps    Include the support information of direct production dependencies
  --dev     When used with --deps, include direct dev dependencies
  --json    Print JSON formatted output
`;
};

exports.main = async ({ _: [what], deps, deep, dev, json }) => {

    if (!what) {
        console.log(internals.help());
        return;
    }

    if (!deps && (deep || dev)) {
        console.log('--deep and --dev can only be used together with --deps\n');
        console.log(internals.help());
        return;
    }

    const result = await NodeSupport.detect(what, { deps, deep, dev });

    if (json) {
        console.log(JSON.stringify(result, null, '  '));
    }
    else {
        console.log(Util.inspect(result, false, null, true));
    }
};

exports.main(Minimist(process.argv.slice(2), { boolean: ['deps', 'dev', 'deep', 'json'] }))
    .catch((err) => {

        console.error(err);
        console.log(internals.help());
        process.exit(1);
    });
